import matplotlib.pyplot as plt
import numpy as np
from scipy.interpolate import griddata
frame_width, frame_height = 1920, 1440
Elements = [[[-0.009716981132075475, -0.009339622641509449], [0.010274798926438122, -0.009038075783719679]], [[-7.184157656492385e-06, -0.000467234504371139], [-0.009152366015330676, -0.008812455936606844]], [[0.0, 0.0], [0.00930753795326772, 0.010206061620232187]], [[-0.009417866070352138, -0.009888759373869738], [-2.600267179702709e-05, -9.119390520684101e-07]], [[-0.010072284735115483, 0.009055815633406572], [0.010070670201022813, -0.009199241503459965]], [[0.009906172032665278, 0.00971381917766212], [-2.266955864633947e-05, 2.1313676977937918e-05]], [[-0.0198168612952422, -0.019787115077743483], [-7.810400687931917e-05, -2.209260766791515e-05]], [[0.010399996672001588, -0.00969999689600154], [-0.009760108025714531, 0.009700970993111846]], [[-0.020825528320919155, -0.0012096894750110703], [-0.00030666532923920645, 0.018928983837230164]], [[-0.010358314751106046, 0.009015570246333038], [0.0002822248549148032, -0.0004646501958863736]], [[-0.010296207575565153, 0.009396538952457456], [1.3489213740764013e-06, -4.0173453660784404e-05]], [[-0.009598123514094031, -0.009790085984375863], [0.009497708924143644, 0.00988270246269185]], [[0.0, 0.0], [-5.129255494092723e-05, -0.00011320838820903637]], [[-0.010079393641917206, 0.009215445615467166], [7.601199373814707e-05, 4.1508144768769885e-05]], [[0.0, 0.0], [0.01121001052005649, -0.00888274263002059]], [[-0.009900057841895016, -0.00999807821656723], [-0.009899665175051364, -0.009826755520155606]]]
Centroids = [[921.75, -357.25], [972.5, -354.75], [922.5, -410.25], [973.25, -408.0], [924.5, -462.25], [974.75, -460.75], [926.0, -514.25], [975.75, -513.0], [928.0, -566.5], [977.5, -565.0], [930.5, -618.25], [979.5, -617.0], [932.25, -669.5], [981.0, -668.25], [934.25, -720.75], [982.5, -719.75]]
# Example data (Replace this with your list of 3D coordinates)
x = []
y = []
z = []
for i in Centroids:
    x.append(i[0])
for i in Centroids:
    y.append(frame_height+i[1])
for i in Elements:
    z.append(i[1][1])

print(x)
print()
print(y)
print()
print(z)
print()

# Creating a grid for interpolation
xi = np.linspace(min(x), max(x), 100)
yi = np.linspace(min(y), max(y), 100)
xi, yi = np.meshgrid(xi, yi)

# Interpolating z values for the grid
zi = griddata((x, y), z, (xi, yi), method='cubic')

# Plotting contour plot
plt.figure(figsize=(8, 6))
contour = plt.contour(xi, yi, zi, levels=10, cmap='viridis')  # Adjust levels for contour density, cmap for colormap
plt.colorbar(contour, label='Elevation')
plt.xlabel('X')
plt.ylabel('Y')
plt.xlim(0, frame_width)
plt.ylim(0, frame_height)
plt.title('Contour Plot from 3D Coordinates')

plt.show()